diff --git a/src/api.py b/src/api.py
index 05ef345..342773e 100644
--- a/src/api.py
+++ b/src/api.py
@@ -29,6 +29,9 @@ async def get_factorial_result(input_num: int, db: Session = Depends(database.ge
         raise HTTPException(status_code=400, detail="Input too large")
 
 @app.get("/history")
-async def get_history(db: Session = Depends(database.get_db)):
-    results = db.query(models.FactorialResult).order_by(models.FactorialResult.created_at.desc()).all()
+async def get_history(input_number: int = None, db: Session = Depends(database.get_db)):
+    query = db.query(models.FactorialResult)
+    if input_number is not None:
+        query = query.filter(models.FactorialResult.input_number == input_number)
+    results = query.order_by(models.FactorialResult.created_at.desc()).all()
     return results
diff --git a/tests/test_api.py b/tests/test_api.py
index 2cafcd4..13b083f 100644
--- a/tests/test_api.py
+++ b/tests/test_api.py
@@ -92,6 +92,28 @@ def test_history():
     assert results[1]["input_number"] == 0
     assert results[1]["result"] == 1
 
+def test_history_filter():
+    # Clear any existing history
+    db = TestingSessionLocal()
+    db.query(FactorialResult).delete()
+    db.commit()
+    
+    # Create some factorial results
+    client.get("/factorial/0")
+    client.get("/factorial/5")
+    
+    # Test history endpoint with filter
+    response = client.get("/history?input_number=5")
+    assert response.status_code == 200
+    results = response.json()
+    
+    # Check we have 1 result
+    assert len(results) == 1
+    
+    # Check the result is correct
+    assert results[0]["input_number"] == 5
+    assert results[0]["result"] == 120
+
 def teardown_module(module):
     """Cleanup test database after all tests complete"""
     engine.dispose()
